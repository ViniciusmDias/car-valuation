{"version":3,"sources":["styles/global.ts","contexts/theme.tsx","styles/themes.ts","assets/logo-creditas.svg","components/ThemeToggler/styles.ts","components/ThemeToggler/index.tsx","components/Header/styles.ts","components/Header/index.tsx","routes/Route.tsx","contexts/car.tsx","services/api.ts","components/Select/styles.ts","components/Select/index.tsx","pages/Home/styles.ts","components/ChangePageButton/styles.ts","components/ChangePageButton/index.tsx","components/Title/styles.ts","components/Title/index.tsx","components/Main/styles.ts","components/Main/index.tsx","components/Footer/styles.ts","components/Footer/index.tsx","components/Content/styles.ts","components/Content/index.tsx","components/Subtitle/styles.ts","components/Subtitle/index.tsx","components/Loading/styles.ts","components/Loading/index.tsx","pages/Home/index.tsx","pages/Model/index.tsx","pages/Version/index.tsx","pages/Year/index.tsx","utils/convertNumberToBRL.ts","pages/Car/styles.ts","pages/Car/index.tsx","routes/index.tsx","contexts/index.tsx","App.tsx","index.tsx"],"names":["globalStyle","createGlobalStyle","theme","background","text","card","withTheme","ThemeContext","createContext","ThemeProvider","children","useState","setTheme","useEffect","localTheme","window","localStorage","getItem","setMode","useCallback","mode","setItem","themeToggler","Provider","value","useTheme","context","useContext","Error","darkTheme","textSecondary","boxShadow","lightTheme","Container","styled","div","Icons","span","ThemeToggler","htmlFor","className","id","type","onClick","onChange","checked","style","marginLeft","height","size","Header","to","src","logo","alt","Route","Component","component","rest","themeMode","render","CarContext","CarProvider","car","setCar","brand","setBrand","model","setModel","year","setYear","versionId","setVersionId","useCar","api","axios","create","baseURL","Select","label","title","placeholder","nextPageUrl","defaultValue","options","versionOptions","history","useHistory","nextPage","push","handleChangeSelect","newValue","e","target","disabled","map","option","version","main","Description","p","NextPageButton","Link","ChangePageButton","url","IconLeft","iconLeft","IconRight","iconRight","marginRight","Title","h1","Main","Footer","footer","Content","section","Subtitle","h4","ellipsis1","keyframes","ellipsis3","ellipsis2","Loading","Home","loading","setLoading","brandsOptions","setBrandsOptions","getBrands","a","get","response","brands","data","FaArrowRight","Model","modelsOptions","setModelsOptions","getModels","models","FaArrowLeft","Version","versionsOptions","setVersionsOptions","getVersions","versions","Year","yearsOptions","setYearsOptions","getYears","years","convertNumberToBRL","number","Intl","NumberFormat","currency","format","Text","CleanButton","button","Car","getCar","newCar","color","precoMedio","modelYear","precoFipe","kmMedio","Routes","exact","path","Contexts","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cca684d8.chunk.js","sourcesContent":["import { createGlobalStyle, withTheme } from 'styled-components';\nimport { ThemeProps } from './themes';\n\ntype GlobalThemeProps = {\n  theme: ThemeProps;\n};\n\nconst globalStyle = createGlobalStyle`\n  :root {\n    //dark-mode\n    --dark-background: #1A1B27;\n    --dark-card: #202231;\n    --dark-text: #F5F5F7;\n    --dark-text-secondary: #F5F5F7B3;    \n    --dark-box-shadow: #00000029;\n\n    //white-mode\n    --light-background: #FCFCFC;\n    --light-card: #f2f2f2;\n    --light-text: #1f2d27;\n    --light-text-secondary: #6f7974;\n    --white-box-shadow: #7F87904D;\n\n    //global\n    --white: #FCFCFC;\n    --gray: #ecefed;\n    --red: #E81A30;\n    --yellow: #F5DE0D;\n    --green: #11bb77;\n    --blue: #3377bb;\n  }\n\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    outline: 0;\n    padding: 0;\n  \n    ::-webkit-scrollbar {\n      height: 0.3rem;\n      width: 1rem;\n    }\n    ::-webkit-scrollbar-track {\n      background: ${({ theme }: GlobalThemeProps) => theme.background}\n    }\n    ::-webkit-scrollbar-thumb {\n      background: var(--gray);\n      border-radius: 0.6rem;\n    }\n    ::-webkit-scrollbar-thumb:hover {\n      background: ${({ theme }: GlobalThemeProps) => theme.text};\n    }\n  }\n\n  body  {\n    -webkit-font-smoothing: antialiased;\n    background: ${({ theme }: GlobalThemeProps) => theme.background};\n    color: ${({ theme }: GlobalThemeProps) => theme.text};\n  }\n\n  body, input, button, textarea, select, option {\n    font-family: 'Nunito', sans-serif;\n    font-size: 16px;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: 700;\n  }\n\n  h1 {\n    font-size: 3.375rem;\n  }\n\n  h2 {\n    font-size: 2.25rem;\n  }\n\n  h3 {\n    font-size: 1.5rem;\n  }\n\n  h4 {\n    font-size: 1.25rem;\n  }\n\n  p {\n    font-size: 1rem;\n    font-weight: 400;\n    letter-spacing: normal;\n    line-height: normal;\n  }\n\n  span {\n    font-size: 1rem;\n    font-weight: 500;\n  }\n\n  strong {\n    font-size: 1rem;\n    font-weight: 700;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  * {\n    scrollbar-width: thin;\n  }\n\n  *::-webkit-scrollbar {\n    height: 0.4rem;\n    width: 0.5rem;\n  }\n\n  *::-webkit-scrollbar-track {\n    background: ${({ theme }: GlobalThemeProps) => theme.card};\n    opacity: 0.2;\n  }\n\n  *::-webkit-scrollbar-thumb {\n    background-color: var(--gray);\n    border-radius: 1rem;\n  }\n`;\n\nexport default withTheme(globalStyle);\n","import {\n  createContext,\n  useContext,\n  useCallback,\n  useState,\n  ReactNode,\n  useEffect,\n} from 'react';\n\ninterface ThemeContextData {\n  themeToggler(): void;\n  theme: string;\n}\n\nconst ThemeContext = createContext<ThemeContextData>({} as ThemeContextData);\n\nfunction ThemeProvider({ children }: { children: ReactNode }) {\n  const [theme, setTheme] = useState('dark');\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    localTheme && setTheme(localTheme);\n  }, []);\n\n  const setMode = useCallback((mode: string) => {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  }, []);\n\n  const themeToggler = useCallback(() => {\n    return theme === 'dark' ? setMode('light') : setMode('dark');\n  }, [setMode, theme]);\n\n  return (\n    <ThemeContext.Provider value={{ themeToggler, theme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nfunction useTheme(): ThemeContextData {\n  const context = useContext(ThemeContext);\n\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n\n  return context;\n}\n\nexport { ThemeProvider, useTheme };\n","export interface ThemeProps {\n  background: string;\n  card: string;\n  text: string;\n  textSecondary: string;\n  boxShadow: string;\n}\n\nexport const darkTheme: ThemeProps = {\n  background: 'var(--dark-background)',\n  card: 'var(--dark-card)',\n  text: 'var(--dark-text)',\n  textSecondary: 'var(--dark-text-secondary)',\n  boxShadow: 'var(--dark-box-shadow)',\n};\n\nexport const lightTheme: ThemeProps = {\n  background: 'var(--light-background)',\n  card: 'var(--light-card)',\n  text: 'var(--light-text)',\n  textSecondary: 'var(--light-text-secondary)',\n  boxShadow: 'var(--white-box-shadow)',\n};\n","export default __webpack_public_path__ + \"static/media/logo-creditas.01a5d26d.svg\";","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n\n  .switch {\n    display: inline-block;\n    height: 1.5rem;\n    position: relative;\n    width: 4rem;\n  }\n\n  .switch input {\n    height: 0;\n    opacity: 0;\n    width: 0;\n  }\n\n  .slider {\n    -webkit-transition: 0.2s;\n    background-color: ${({ theme }) => theme.card};\n    bottom: 0;\n    box-shadow: 0 0 2px ${({ theme }) => theme.text};\n    cursor: pointer;\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n    transition: 0.2s;\n  }\n\n  .slider:before {\n    -webkit-transition: 0.2s;\n    background-color: ${({ theme }) => theme.boxShadow};\n    bottom: 5px;\n    content: '';\n    height: 14px;\n    left: 7px;\n    position: absolute;\n    transition: 0.2s;\n    width: 14px;\n  }\n\n  input:checked + .slider {\n    background-color: ${({ theme }) => theme.card};\n  }\n\n  input:checked + .slider:before {\n    -ms-transform: translateX(35px);\n    -webkit-transform: translateX(35px);\n    transform: translateX(35px);\n  }\n\n  /* Rounded sliders */\n  .slider.round {\n    border-radius: 34px;\n  }\n\n  .slider.round:before {\n    border-radius: 50%;\n  }\n`;\n\nexport const Icons = styled.span`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  top: 25%;\n  width: 100%;\n\n  svg {\n    color: var(--yellow);\n    z-index: 11;\n  }\n`;\n","import { HiMoon } from 'react-icons/hi';\nimport { FaSun } from 'react-icons/fa';\n\nimport * as S from './styles';\n\nimport { useTheme } from '../../contexts/theme';\n\nexport function ThemeToggler() {\n  const { themeToggler } = useTheme();\n\n  return (\n    <S.Container>\n      <label htmlFor=\"checkbox\" className=\"switch\">\n        <input\n          id=\"checkbox\"\n          type=\"checkbox\"\n          onClick={themeToggler}\n          onChange={() => false}\n          checked={window.localStorage.getItem('theme') === 'light'}\n        />\n        <S.Icons className=\"slider round\">\n          {window.localStorage.getItem('theme') !== 'light' ? (\n            <>\n              <HiMoon style={{ marginLeft: '6.3px', height: '10px' }} />\n            </>\n          ) : (\n            <>\n              <FaSun size={0} style={{ marginLeft: '41px', height: '10px' }} />\n            </>\n          )}\n        </S.Icons>\n      </label>\n    </S.Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-items: center;\n  display: flex;\n  height: 5rem;\n  justify-content: space-between;\n  margin: 0 2rem;\n  position: relative;\n\n  a {\n    align-items: center;\n    display: flex;\n    justify-content: center;\n\n    img {\n      height: 2rem;\n      width: 2rem;\n    }\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport logo from '../../assets/logo-creditas.svg';\nimport { ThemeToggler } from '../ThemeToggler';\n\nimport * as S from './styles';\n\nexport function Header() {\n  return (\n    <S.Container>\n      <Link to=\"/\" id=\"go to home\">\n        <img src={logo} alt=\"Creditas\" />\n      </Link>\n      <ThemeToggler />\n    </S.Container>\n  );\n}\n","import {\n  Route as ReactDOMRoute,\n  RouteProps as ReactDOMRouteProps,\n} from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport GlobalStyle from '../styles/global';\n\nimport { useTheme } from '../contexts/theme';\nimport { lightTheme, darkTheme } from '../styles/themes';\nimport { Header } from '../components/Header';\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nexport function Route({ component: Component, ...rest }: RouteProps) {\n  const { theme } = useTheme();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={() => {\n        return (\n          <ThemeProvider theme={themeMode}>\n            <GlobalStyle />\n            <Header />\n            <Component />\n          </ThemeProvider>\n        );\n      }}\n    />\n  );\n}\n","import React, {\n  createContext,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useContext,\n  useState,\n} from 'react';\n\ntype CarContextData = {\n  car: Car;\n  setCar: Dispatch<SetStateAction<Car>>;\n  brand: string;\n  setBrand: Dispatch<SetStateAction<string>>;\n  model: string;\n  setModel: Dispatch<SetStateAction<string>>;\n  year: string;\n  setYear: Dispatch<SetStateAction<string>>;\n  versionId: string;\n  setVersionId: Dispatch<SetStateAction<string>>;\n};\n\nexport const CarContext = createContext({} as CarContextData);\n\ntype CarContextProviderProps = {\n  children: ReactNode;\n};\n\nexport const CarProvider: React.FC<CarContextProviderProps> = ({\n  children,\n}: CarContextProviderProps) => {\n  const [car, setCar] = useState({} as Car);\n  const [brand, setBrand] = useState('');\n  const [model, setModel] = useState('');\n  const [year, setYear] = useState('');\n  const [versionId, setVersionId] = useState('');\n\n  return (\n    <CarContext.Provider\n      value={{\n        car,\n        setCar,\n        brand,\n        setBrand,\n        model,\n        setModel,\n        year,\n        setYear,\n        versionId,\n        setVersionId,\n      }}\n    >\n      {children}\n    </CarContext.Provider>\n  );\n};\n\nexport const useCar = (): CarContextData => {\n  return useContext(CarContext);\n};\n","import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'https://creditas-price-api-v2.herokuapp.com',\n});\n","import styled from 'styled-components';\n\nexport const Select = styled.label`\n  color: ${({ theme }) => theme.textSecondary};\n  display: flex;\n  flex-direction: column;\n  font-size: 0.875rem;\n  letter-spacing: 0.84px;\n  line-height: 0.75rem;\n  margin-bottom: 1rem;\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  select {\n    background-color: ${({ theme }) => theme.card};\n    border-radius: 5px;\n    border: 1px solid ${({ theme }) => theme.textSecondary};\n    color: ${({ theme }) => theme.textSecondary};\n    font-size: 0.75rem;\n    font-weight: 400;\n    height: 2rem;\n    letter-spacing: 0.72px;\n    line-height: 0.75rem;\n    padding: 0.3rem 0.75rem;\n\n    ::placeholder {\n      color: ${({ theme }) => theme.text};\n    }\n  }\n`;\n","import { useHistory } from 'react-router-dom';\nimport * as S from './styles';\n\ninterface SelectProps {\n  id: string;\n  title: string;\n  placeholder: string;\n  onChange: (value: string) => void;\n  nextPageUrl: string;\n  defaultValue: string;\n  options?: string[];\n  versionOptions?: Version[];\n}\n\nexport function Select({\n  id,\n  title,\n  placeholder,\n  onChange,\n  nextPageUrl,\n  defaultValue,\n  options,\n  versionOptions,\n}: SelectProps) {\n  const history = useHistory();\n\n  const nextPage = () => {\n    history.push(nextPageUrl);\n  };\n\n  const handleChangeSelect = (newValue: string) => {\n    onChange(newValue);\n    nextPage();\n  };\n\n  return (\n    <S.Select htmlFor={id}>\n      <p>{title}</p>\n      <select\n        id={id}\n        placeholder={placeholder}\n        onChange={(e) => {\n          handleChangeSelect(e.target.value);\n          nextPage();\n        }}\n        value={defaultValue}\n      >\n        <option value=\"\" disabled>\n          {placeholder}\n        </option>\n        {versionOptions\n          ? versionOptions.map((option) => (\n              <option key={option.versionId} value={option.versionId}>\n                {option.version}\n              </option>\n            ))\n          : options &&\n            options.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n      </select>\n    </S.Select>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin: 0 2rem;\n  height: calc(100vh - 5rem);\n`;\n\nexport const Description = styled.p`\n  color: ${({ theme }) => theme.textSecondary};\n  margin-bottom: 2rem;\n\n  span {\n    color: var(--green);\n    font-weight: 600;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NextPageButton = styled(Link)`\n  align-items: center;\n  bottom: 0;\n  color: ${({ theme }) => theme.text};\n  display: flex;\n  font-weight: 600;\n  opacity: 1;\n  transition: all 0.5s ease-in-out;\n\n  :hover {\n    opacity: 0.7;\n  }\n`;\n","import { IconBaseProps } from 'react-icons/lib';\nimport * as S from './styles';\n\ninterface NextPageButtonProps {\n  url: string;\n  iconRight?: React.ComponentType<IconBaseProps>;\n  iconLeft?: React.ComponentType<IconBaseProps>;\n  text: string;\n}\n\nexport function ChangePageButton({\n  url,\n  text,\n  iconLeft: IconLeft,\n  iconRight: IconRight,\n}: NextPageButtonProps) {\n  return (\n    <S.NextPageButton to={url}>\n      {IconLeft && <IconLeft style={{ marginRight: '0.5rem' }} />}\n      {text}\n      {IconRight && <IconRight style={{ marginLeft: '0.5rem' }} />}\n    </S.NextPageButton>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 2rem;\n  line-height: 2rem;\n  margin-bottom: 2rem;\n`;\n","import * as S from './styles';\n\ninterface TitleProps {\n  text: string;\n  style?: React.CSSProperties;\n}\n\nexport function Title({ text, style }: TitleProps) {\n  return <S.Title style={style}>{text}</S.Title>;\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 5rem);\n  justify-content: space-between;\n  margin: 0 auto;\n  max-width: 60ch;\n  padding: 2rem 2rem;\n`;\n","import { ReactNode } from 'react';\nimport * as S from './styles';\n\ninterface MainProps {\n  children: ReactNode;\n}\n\nexport function Main({ children }: MainProps) {\n  return <S.Container>{children}</S.Container>;\n}\n","import styled from 'styled-components';\n\nexport const Footer = styled.footer`\n  display: flex;\n  justify-content: space-between;\n`;\n","import { ReactNode } from 'react';\nimport * as S from './styles';\n\ninterface FooterProps {\n  children: ReactNode;\n}\n\nexport function Footer({ children }: FooterProps) {\n  return <S.Footer>{children}</S.Footer>;\n}\n","import styled from 'styled-components';\n\nexport const Content = styled.section`\n  display: flex;\n  flex-direction: column;\n`;\n","import { ReactNode } from 'react';\nimport * as S from './styles';\n\ninterface ContentProps {\n  children: ReactNode;\n}\n\nexport function Content({ children }: ContentProps) {\n  return <S.Content>{children}</S.Content>;\n}\n","import styled from 'styled-components';\n\nexport const Subtitle = styled.h4`\n  font-weight: 400;\n  margin-bottom: 1rem;\n  margin-top: 2rem;\n`;\n","import * as S from './styles';\n\ninterface SubtitleProps {\n  text: string;\n}\n\nexport function Subtitle({ text }: SubtitleProps) {\n  return <S.Subtitle>{text}</S.Subtitle>;\n}\n","import styled, { keyframes } from 'styled-components';\n\nconst ellipsis1 = keyframes`\n  0% {\n    transform: scale(0);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\nconst ellipsis3 = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(0);\n  }\n`;\nconst ellipsis2 = keyframes`\n  0% {\n    transform: translate(0, 0);\n  }\n  100% {\n    transform: translate(24px, 0);\n  }\n`;\n\nexport const Container = styled.div`\n  align-self: center;\n  display: inline-block;\n  height: 80px;\n  position: relative;\n  width: 80px;\n\n  div {\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\n    background: var(--green);\n    border-radius: 50%;\n    height: 1rem;\n    position: absolute;\n    top: 2rem;\n    width: 1rem;\n\n    &:nth-child(1) {\n      animation: ${ellipsis1} 0.6s infinite;\n      left: 0.5rem;\n    }\n    &:nth-child(2) {\n      animation: ${ellipsis2} 0.6s infinite;\n      left: 0.5rem;\n    }\n    &:nth-child(3) {\n      animation: ${ellipsis2} 0.6s infinite;\n      left: 2rem;\n    }\n    &:nth-child(4) {\n      animation: ${ellipsis3} 0.6s infinite;\n      left: 56px;\n    }\n  }\n`;\n","import { CSSProperties } from 'styled-components';\n\nimport * as S from './styles';\n\ninterface LoadingProps {\n  style?: CSSProperties;\n}\n\nexport function Loading({ style }: LoadingProps) {\n  return (\n    <S.Container className=\"ellipsis\" style={style}>\n      <div />\n      <div />\n      <div />\n      <div />\n    </S.Container>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { useCar } from '../../contexts/car';\nimport { api } from '../../services/api';\nimport { Select } from '../../components/Select';\nimport * as S from './styles';\nimport { ChangePageButton } from '../../components/ChangePageButton';\nimport { Title } from '../../components/Title';\nimport { Main } from '../../components/Main';\nimport { Footer } from '../../components/Footer';\nimport { Content } from '../../components/Content';\nimport { Subtitle } from '../../components/Subtitle';\nimport { Loading } from '../../components/Loading';\n\nexport function Home() {\n  const { brand, setBrand } = useCar();\n  const [loading, setLoading] = useState(true);\n\n  const [brandsOptions, setBrandsOptions] = useState(['']);\n\n  const getBrands = useCallback(async () => {\n    const response = await api.get(`/brands`);\n\n    const brands: string[] = response.data;\n\n    setBrandsOptions(brands);\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    getBrands();\n  }, [getBrands]);\n\n  return (\n    <Main>\n      <Content>\n        <Subtitle text=\"Olá, boa tarde!\" />\n        <S.Description>\n          Bem vindo ao novo sistema da <span> Creditas </span>onde buscamos\n          responder a seguinte pergunta:\n        </S.Description>\n        <Title text=\"Quanto vale o meu carro?\" />\n        {loading ? (\n          <Loading />\n        ) : (\n          <Select\n            id=\"brand\"\n            title=\"Para iniciar, comece selecionando a marca do seu carro\"\n            placeholder=\"Selecione a marca seu carro\"\n            onChange={setBrand}\n            nextPageUrl=\"/model\"\n            defaultValue={brand}\n            options={brandsOptions}\n          />\n        )}\n      </Content>\n      <Footer>\n        {brand && (\n          <ChangePageButton\n            url=\"/model\"\n            iconRight={FaArrowRight}\n            text=\"Selecionar o modelo\"\n          />\n        )}\n      </Footer>\n    </Main>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\nimport { Redirect } from 'react-router-dom';\nimport { Main } from '../../components/Main';\nimport { ChangePageButton } from '../../components/ChangePageButton';\nimport { Select } from '../../components/Select';\nimport { Title } from '../../components/Title';\nimport { useCar } from '../../contexts/car';\nimport { api } from '../../services/api';\nimport { Content } from '../../components/Content';\nimport { Footer } from '../../components/Footer';\nimport { Loading } from '../../components/Loading';\n\nexport function Model() {\n  const { brand, model, setModel } = useCar();\n  const [loading, setLoading] = useState(true);\n\n  const [modelsOptions, setModelsOptions] = useState(['']);\n\n  const getModels = useCallback(async () => {\n    const response = await api.get(`/brands/${brand}/models`);\n\n    const models: string[] = response.data;\n\n    setModelsOptions(models);\n    setLoading(false);\n  }, [brand]);\n\n  useEffect(() => {\n    getModels();\n  }, [getModels]);\n\n  return !brand ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Main>\n      <Content>\n        <Title text={`Seu carro é da marca ${brand}.`} />\n        {loading ? (\n          <Loading />\n        ) : (\n          <Select\n            id=\"model\"\n            title=\"Para prosseguir, precisamos saber o modelo do seu carro\"\n            placeholder=\"Selecione o modelo do seu carro\"\n            onChange={setModel}\n            nextPageUrl=\"/year\"\n            defaultValue={model}\n            options={modelsOptions}\n          />\n        )}\n      </Content>\n      <Footer>\n        <ChangePageButton url=\"\" iconLeft={FaArrowLeft} text=\"Voltar\" />\n        {brand && model && (\n          <ChangePageButton\n            url=\"/year\"\n            iconRight={FaArrowRight}\n            text=\"Selecionar o ano\"\n          />\n        )}\n      </Footer>\n    </Main>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\nimport { Redirect } from 'react-router-dom';\nimport { ChangePageButton } from '../../components/ChangePageButton';\nimport { Content } from '../../components/Content';\nimport { Footer } from '../../components/Footer';\nimport { Loading } from '../../components/Loading';\nimport { Main } from '../../components/Main';\nimport { Select } from '../../components/Select';\nimport { Title } from '../../components/Title';\nimport { useCar } from '../../contexts/car';\nimport { api } from '../../services/api';\n\nexport function Version() {\n  const { brand, model, year, versionId, setVersionId } = useCar();\n  const [versionsOptions, setVersionsOptions] = useState([{} as Version]);\n  const [loading, setLoading] = useState(true);\n\n  const getVersions = useCallback(async () => {\n    const response = await api.get(\n      `/brands/${brand}/models/${model}/years/${year}/versions`,\n    );\n\n    const versions: Version[] = response.data;\n\n    setVersionsOptions(versions);\n    setLoading(false);\n  }, [brand, model, year]);\n\n  useEffect(() => {\n    getVersions();\n  }, [getVersions]);\n\n  return !brand ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Main>\n      <Content>\n        <Title\n          text={`Seu carro é da marca ${brand}, no modelo ${model} e do ano ${year}.`}\n        />\n        {loading ? (\n          <Loading />\n        ) : (\n          <Select\n            id=\"version\"\n            title=\"Para finalizar, nos diga a versão do seu automóvel?\"\n            placeholder=\"Selecione a versão do carro\"\n            onChange={setVersionId}\n            nextPageUrl=\"/car\"\n            defaultValue={versionId}\n            versionOptions={versionsOptions}\n          />\n        )}\n      </Content>\n      <Footer>\n        <ChangePageButton url=\"/year\" iconLeft={FaArrowLeft} text=\"Voltar\" />\n        {brand && model && year && versionId && (\n          <ChangePageButton\n            url=\"/car\"\n            iconRight={FaArrowRight}\n            text=\"Descobrir o valor\"\n          />\n        )}\n      </Footer>\n    </Main>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\nimport { Redirect } from 'react-router-dom';\nimport { ChangePageButton } from '../../components/ChangePageButton';\nimport { Content } from '../../components/Content';\nimport { Footer } from '../../components/Footer';\nimport { Loading } from '../../components/Loading';\nimport { Main } from '../../components/Main';\nimport { Select } from '../../components/Select';\nimport { Title } from '../../components/Title';\nimport { useCar } from '../../contexts/car';\nimport { api } from '../../services/api';\n\nexport function Year() {\n  const { brand, model, year, setYear } = useCar();\n  const [yearsOptions, setYearsOptions] = useState(['']);\n  const [loading, setLoading] = useState(true);\n\n  const getYears = useCallback(async () => {\n    const response = await api.get(`/brands/${brand}/models/${model}/years`);\n\n    const years: string[] = response.data;\n\n    setYearsOptions(years);\n    setLoading(false);\n  }, [brand, model]);\n\n  useEffect(() => {\n    getYears();\n  }, [getYears]);\n\n  return !brand ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Main>\n      <Content>\n        <Title text={`Seu carro é da marca ${brand}, no modelo ${model}.`} />\n        {loading ? (\n          <Loading />\n        ) : (\n          <Select\n            id=\"year\"\n            title=\"De qual ano é o seu possante?\"\n            placeholder=\"Selecione o ano do seu carro\"\n            onChange={setYear}\n            nextPageUrl=\"/version\"\n            defaultValue={year}\n            options={yearsOptions}\n          />\n        )}\n      </Content>\n      <Footer>\n        <ChangePageButton url=\"/model\" iconLeft={FaArrowLeft} text=\"Voltar\" />\n        {brand && model && year && (\n          <ChangePageButton\n            url=\"/version\"\n            iconRight={FaArrowRight}\n            text=\"Selecionar a versão\"\n          />\n        )}\n      </Footer>\n    </Main>\n  );\n}\n","const convertNumberToBRL = (number: number): string => {\n  const formatter = new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL',\n  });\n\n  const money = formatter.format(number);\n\n  return money;\n};\n\nexport { convertNumberToBRL };\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  color: ${({ theme }) => theme.textSecondary};\n  margin-bottom: 2rem;\n`;\n\nexport const CleanButton = styled.button`\n  background: transparent;\n  border: 0;\n  display: flex;\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\nimport { Redirect } from 'react-router-dom';\nimport { ChangePageButton } from '../../components/ChangePageButton';\nimport { Content } from '../../components/Content';\nimport { Footer } from '../../components/Footer';\nimport { Loading } from '../../components/Loading';\nimport { Main } from '../../components/Main';\nimport { Subtitle } from '../../components/Subtitle';\nimport { Title } from '../../components/Title';\nimport { useCar } from '../../contexts/car';\nimport { api } from '../../services/api';\nimport { convertNumberToBRL } from '../../utils/convertNumberToBRL';\nimport * as S from './styles';\n\nexport function Car() {\n  const {\n    brand,\n    setBrand,\n    model,\n    setModel,\n    year,\n    setYear,\n    versionId,\n    setVersionId,\n    car,\n    setCar,\n  } = useCar();\n  const [loading, setLoading] = useState(true);\n\n  const getCar = useCallback(async () => {\n    const response = await api.get(\n      `/brands/${brand}/models/${model}/years/${year}/versions/${versionId}`,\n    );\n    const newCar: Car = response.data;\n    setCar(newCar);\n    setLoading(false);\n  }, [brand, model, year, versionId, setCar]);\n\n  const cleanData = () => {\n    setBrand('');\n    setModel('');\n    setYear('');\n    setVersionId('');\n    setCar({} as Car);\n  };\n\n  useEffect(() => {\n    getCar();\n  }, [getCar]);\n\n  return !brand ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Main>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Content>\n          <Subtitle text=\"Obrigado por usar nossa aplicação!\" />\n          <S.Text>O valor em média do seu carro é:</S.Text>\n          <Title\n            style={{ color: 'var(--green)' }}\n            text={convertNumberToBRL(+car.precoMedio)}\n          />\n          <S.Text>\n            Trouxemos abaixo mais alguns informações sobre o seu automóvel.\n          </S.Text>\n          {car.brand && (\n            <h3>\n              Marca: <span>{car.brand}</span>\n            </h3>\n          )}\n          {car.model && (\n            <h3>\n              Modelo: <span>{car.model}</span>\n            </h3>\n          )}\n          {car.modelYear && (\n            <h3>\n              Year: <span>{car.modelYear}</span>\n            </h3>\n          )}\n          {car.version && (\n            <h3>\n              Versão: <span>{car.version}</span>\n            </h3>\n          )}\n          {car.precoFipe && (\n            <h3>\n              Preço Fipe: <span>{convertNumberToBRL(+car.precoFipe)}</span>\n            </h3>\n          )}\n          {car.kmMedio && (\n            <h3>\n              Média Kilometragem: <span>{car.kmMedio}km</span>\n            </h3>\n          )}\n        </Content>\n      )}\n      <Footer>\n        <ChangePageButton url=\"/version\" iconLeft={FaArrowLeft} text=\"Voltar\" />\n        <S.CleanButton type=\"button\" onClick={() => cleanData()}>\n          <ChangePageButton\n            url=\"/\"\n            iconRight={FaArrowRight}\n            text=\"Pesquisar outro carro\"\n          />\n        </S.CleanButton>\n      </Footer>\n    </Main>\n  );\n}\n","import { Switch } from 'react-router-dom';\n\nimport { Route } from './Route';\n\nimport { Home } from '../pages/Home';\nimport { Model } from '../pages/Model';\nimport { Version } from '../pages/Version';\nimport { Year } from '../pages/Year';\nimport { Car } from '../pages/Car';\n\nexport function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/model\" component={Model} />\n      <Route exact path=\"/year\" component={Year} />\n      <Route exact path=\"/version\" component={Version} />\n      <Route exact path=\"/car\" component={Car} />\n    </Switch>\n  );\n}\n","import { ReactNode } from 'react';\nimport { CarProvider } from './car';\nimport { ThemeProvider } from './theme';\n\ninterface ContextsProps extends React.HTMLAttributes<Element> {\n  children: ReactNode;\n}\n\nexport function Contexts({ children }: ContextsProps) {\n  return (\n    <ThemeProvider>\n      <CarProvider>{children}</CarProvider>\n    </ThemeProvider>\n  );\n}\n","import { BrowserRouter as Router } from 'react-router-dom';\n\nimport { Routes } from './routes/index';\nimport { Contexts } from './contexts';\n\nfunction App() {\n  return (\n    <Router>\n      <Contexts>\n        <Routes />\n      </Contexts>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}